Create a modern personal portfolio website with Next.js and Tailwind CSS using the following specifications:

LAYOUT:

Dark mode theme with subtle contrast
Navigation: Home, Projects, Contact
Responsive design (mobile-first approach)
Maximum width container: max-w-6xl mx-auto
Consistent padding: px-4 md:px-6 lg:px-8
STYLING:

Colors:
Background: bg-[#0a0a0a]
Text: text-gray-200
Accents: text-emerald-500
Typography:
Headings: font-inter font-bold
Body: font-inter font-normal
Spacing: systematic gap-4/gap-6/gap-8
PAGES:

HOME (index.js):

Header:
- Clean navbar with logo and navigation links
- Hamburger menu for mobile

Hero Section:
- Name: "Armaan Sharma" (text-4xl md:text-5xl lg:text-6xl)
- Quote: "Building digital experiences that matter"
- Role: "Full Stack Developer skilled in building scalable web applications with modern tech stacks"
- CTA button to Projects page

Skills Section:
- Grid layout: grid-cols-2 md:grid-cols-3 lg:grid-cols-4
- Each skill as a pill/tag: bg-gray-800 rounded-full px-4 py-2
- Group by category (Frontend, Backend, Cloud, Tools)

Certifications Section:
- Simple list with certification name and issuing organization
- Subtle hover effect
- External link icon for verification

Contact Section:
- Social links with icons (GitHub, LinkedIn, Email)
- Hover effect: opacity-80
PROJECTS (/projects):

Projects Grid:
- grid-cols-1 md:grid-cols-2 gap-6
- Each project card:
  * Image/preview
  * Title
  * Tech stack tags
  * Brief description focusing on impact
  * Live demo & GitHub links
  * Consistent height and padding
  * Hover effect: scale-[1.02]
COMPONENTS:

Reusable Button component
Project Card component
Section Header component
Navigation component
Footer component
TECHNICAL REQUIREMENTS:

Next.js 13+ with App Router
Tailwind CSS for styling
ESLint configuration
Metadata for SEO
Image optimization with next/image
TypeScript for type safety
Responsive images and layouts
Loading states
Error boundaries
PERFORMANCE:

Lazy loading for images
Component code splitting
Minimal third-party dependencies
Optimized fonts with next/font
Cache-Control headers